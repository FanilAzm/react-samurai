{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/CreateNewMessage/CreateNewMessage.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/CreateNewMessage/CreateNewMessage.js","components/Dialogs/CreateNewMessage/CreateNewMessageContainer.js","components/Dialogs/Dialogs.js","redux/selectors/dialogs-selectors.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength10","maxLengthCreator","CreateNewMessageReduxForm","reduxForm","form","newMessage","onSubmit","handleSubmit","Field","type","component","Input","validate","required","CreateNewMessage","values","addMessage","newMessageText","CreateNewMessageContainer","connect","dispatch","addMessageActionCreator","Dialogs","dialogsElements","state","dialogs","map","d","messagesElements","messages","m","dialogsItems","store","getDialogsPageState","dialogsPage","compose","withAuthRedirect"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,oBCA/KD,EAAOC,QAAU,CAAC,WAAa,uC,kFCehBC,EAZI,SAACC,GACnB,IAAMC,EAAO,YAAcD,EAAME,GACjC,OACC,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACC,eAAC,IAAD,CAASC,GAAIN,EAAb,UACC,wBACCD,EAAMQ,WCDIC,EANC,SAACT,GAChB,OACC,qBAAKG,UAAWC,IAAEM,QAAlB,SAA4BV,EAAMU,W,6DCc9BC,EAAcC,YAAiB,IAgB/BC,EAA4BC,YAAU,CAC3CC,KAAM,oBAD2BD,EAdL,SAACd,GAC7B,OACC,uBAAMG,UAAWC,IAAEY,WAAYC,SAAUjB,EAAMkB,aAA/C,UACC,cAACC,EAAA,EAAD,CACCC,KAAK,OACLC,UAAWC,IACXd,KAAK,iBACLe,SAAU,CAACC,IAAUb,KAEtB,gDASYc,EA/BU,SAACzB,GAMzB,OACC,cAACa,EAAD,CAA2BI,SALP,SAACS,GACrB1B,EAAM2B,WAAWD,EAAOE,oB,QCIXC,EAFmBC,YAAQ,MARf,SAACC,GAC3B,MAAO,CACNJ,WAAY,SAACC,GACZG,EAASC,YAAwBJ,QAKFE,CAAkCL,GCWrDQ,EAlBC,SAACjC,GAEhB,IAAMkC,EAAkBlC,EAAMmC,MAAMC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuB9B,KAAM8B,EAAE9B,KAAMN,GAAIoC,EAAEpC,IAA1BoC,EAAEpC,OAClEqC,EAAmBvC,EAAMmC,MAAMK,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAoB/B,QAAS+B,EAAE/B,SAAjB+B,EAAEvC,OAEvE,OACC,sBAAKC,UAAWC,IAAEgC,QAAlB,UACC,qBAAKjC,UAAWC,IAAEsC,aAAlB,SACGR,IAEH,sBAAK/B,UAAWC,IAAEoC,SAAlB,UACGD,EACF,cAAC,EAAD,CAA2BI,MAAO3C,EAAM2C,e,gBClB/BC,EAAsB,SAACT,GACnC,OAAOA,EAAMU,aCsBCC,sBACdhB,aAXuB,SAACK,GACxB,MAAO,CACNA,MAAOS,EAAoBT,OAIF,WAC1B,MAAO,MAKPY,IAFcD,CAGbb","file":"static/js/4.ed9d8ffd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessage\":\"CreateNewMessage_newMessage__2l17K\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from '../Dialogs.module.css';\n\nconst DialogItem = (props) => {\n\tconst path = \"/dialogs/\" + props.id;\n\treturn(\n\t\t<div className={s.dialog + ' ' + s.active}>\n\t\t\t<NavLink to={path}>\n\t\t\t\t<img />\n\t\t\t\t{props.name}\n\t\t\t</NavLink>\n\t\t</div>\n\t)\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from '../Dialogs.module.css';\n\nconst Message = (props) => {\n\treturn(\n\t\t<div className={s.message}>{props.message}</div>\n\t)\n}\n\nexport default Message;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../utils/validators';\nimport { Input } from '../../common/FormControls/FormControls';\n\nimport s from './CreateNewMessage.module.css';\n\n\nconst CreateNewMessage = (props) => {\n\n\tconst onAddMessage = (values) => {\n\t\tprops.addMessage(values.newMessageText);\n\t}\n\n\treturn(\n\t\t<CreateNewMessageReduxForm onSubmit={onAddMessage}/>\n\t)\n}\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst CreateNewMessageForm = (props) => {\n\treturn(\n\t\t<form className={s.newMessage} onSubmit={props.handleSubmit}>\n\t\t\t<Field\n\t\t\t\ttype=\"text\"\n\t\t\t\tcomponent={Input}\n\t\t\t\tname=\"newMessageText\"\n\t\t\t\tvalidate={[required, maxLength10]}\n\t\t\t/>\n\t\t\t<button>Send</button>\n\t\t</form>\n\t)\n}\n\nconst CreateNewMessageReduxForm = reduxForm({\n\tform: 'CreateNewMessage'\n})(CreateNewMessageForm);\n\nexport default CreateNewMessage;","import React from 'react';\nimport {addMessageActionCreator} from '../../../redux/dialogsReducer';\nimport CreateNewMessage from './CreateNewMessage';\nimport {connect} from 'react-redux';\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\taddMessage: (newMessageText) => {\n\t\t\tdispatch(addMessageActionCreator(newMessageText));\n\t\t}\n\t}\n}\n\nconst CreateNewMessageContainer = connect(null, mapDispatchToProps)(CreateNewMessage);\n\nexport default CreateNewMessageContainer;","import React from 'react';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport s from './Dialogs.module.css';\nimport CreateNewMessageContainer from './CreateNewMessage/CreateNewMessageContainer';\n\nconst Dialogs = (props) => {\n\n\tconst dialogsElements = props.state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\n\tconst messagesElements = props.state.messages.map(m => <Message key={m.id} message={m.message}/>);\n\n\treturn(\n\t\t<div className={s.dialogs}>\n\t\t\t<div className={s.dialogsItems}>\n\t\t\t\t{ dialogsElements }\n\t\t\t</div>\n\t\t\t<div className={s.messages}>\n\t\t\t\t{ messagesElements }\n\t\t\t\t<CreateNewMessageContainer store={props.store} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Dialogs;","export const getDialogsPageState = (state) => {\n\treturn state.dialogsPage;\n}","import React from 'react';\nimport Dialogs from './Dialogs';\nimport {connect} from 'react-redux';\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\nimport { getDialogsPageState } from '../../redux/selectors/dialogs-selectors';\n\n// const mapStateToProps = (state) => {\n// \treturn {\n// \t\tstate: state.dialogsPage\n// \t}\n// }\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tstate: getDialogsPageState(state)\n\t}\n}\n\nconst mapDispatchToProps = () => {\n\treturn {}\n}\n\nexport default compose(\n\tconnect(mapStateToProps, mapDispatchToProps),\n\twithAuthRedirect\n)(Dialogs);\n\n// const AuthRedirectComponent = withAuthRedirect(Dialogs);\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n// export default DialogsContainer;"],"sourceRoot":""}